<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 36e1d917ef7be36e8b4ff5193b456390061f2e21 Maintainer: sammywg Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 6c3091b54b66181db5f81ef5afe1d2e8b6efdeac Reviewer: samesch -->
<refentry xml:id="function.defined" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>defined</refname>
  <refpurpose>Prüft, ob eine Konstante mit dem angegebenen Namen existiert</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>defined</methodname>
   <methodparam><type>string</type><parameter>constant_name</parameter></methodparam>
  </methodsynopsis>
  <para>
   Überprüft, ob eine Konstante mit dem angegebenen Namen
   <parameter>constant_name</parameter> definiert ist.
  </para>
  <para>
   Diese Funktion funktioniert auch mit
   <link linkend="language.oop5.constants">Klassenkonstanten</link> und
   <link linkend="language.types.enumerations">Enum-Cases</link>.
  </para>
  <note>
   <para>
    <function>defined</function> gilt nur für
    <link linkend="language.constants">Konstanten</link>. Um zu prüfen, ob
    eine Variable existiert, kann <function>isset</function> verwendet werden.
    Ob eine Funktion existiert, kann mit <function>function_exists</function>
    überprüft werden.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>constant_name</parameter></term>
     <listitem>
      <para>
       Der Name der Konstante
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Wenn die durch <parameter>constant_name</parameter> angegebene Konstante
   definiert ist, wird &true; zurückgegeben, ansonsten &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Konstanten überprüfen</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Beachten Sie die Verwendung von Anführungsstrichen. Das ist wichtig!
 * In diesem Beispiel wird überprüft, ob die Zeichenkette 'TEST' der Name
 * einer Konstante namens TEST ist */
if (defined('TEST')) {
    echo TEST;
}


interface bar {
    const test = 'foobar!';
}

class foo {
    const test = 'foobar!';
}

var_dump(defined('bar::test')); // bool(true)
var_dump(defined('foo::test')); // bool(true)

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Enum-Cases überprüfen (seit PHP 8.1.0)</title>
    <programlisting role="php">
<![CDATA[
<?php

enum Suit
{
    case Hearts;
    case Diamonds;
    case Clubs;
    case Spades;
}

var_dump(defined('Suit::Hearts')); // bool(true)

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>define</function></member>
    <member><function>constant</function></member>
    <member><function>get_defined_constants</function></member>
    <member><function>function_exists</function></member>
    <member>
     Das Kapitel über <link linkend="language.constants">Konstanten</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
